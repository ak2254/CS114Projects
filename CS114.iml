from prefect import flow, task
import os

@task
def fetch_data_from_network_file(network_path: str) -> str:
    """
    Task to fetch data from a network file.
    
    Args:
        network_path (str): Path to the network file.
    
    Returns:
        str: Contents of the file.
    """
    try:
        with open(network_path, 'r') as file:
            data = file.read()
        return data
    except FileNotFoundError:
        raise ValueError(f"File not found at {network_path}")
    except Exception as e:
        raise RuntimeError(f"Error reading file: {e}")

@task
def process_data(data: str) -> None:
    """
    Task to process the data.
    
    Args:
        data (str): Data fetched from the file.
    """
    print(f"Processing data: {data[:100]}...")  # Print first 100 characters for preview

@flow
def network_file_flow(network_path: str):
    """
    Prefect flow to fetch and process data from a network file.
    
    Args:
        network_path (str): Path to the network file.
    """
    data = fetch_data_from_network_file(network_path)
    process_data(data)

if __name__ == "__main__":
    # Replace this with your network file path
    network_file_path = r"\\network_drive\shared_folder\example_file.txt"
    network_file_flow(network_file_path)
