import csv
from prefect import flow, task

@task
def fetch_csv_from_network_file(network_path: str) -> list[dict]:
    """
    Task to fetch data from a CSV file on a network path.
    
    Args:
        network_path (str): Path to the network file.
    
    Returns:
        list[dict]: List of dictionaries representing rows in the CSV file.
    """
    try:
        with open(network_path, mode='r', newline='', encoding='utf-8') as file:
            reader = csv.DictReader(file)
            data = [row for row in reader]  # Convert CSV rows to list of dicts
        return data
    except FileNotFoundError:
        raise ValueError(f"File not found at {network_path}")
    except Exception as e:
        raise RuntimeError(f"Error reading CSV file: {e}")

@task
def process_csv_data(data: list[dict]) -> None:
    """
    Task to process the CSV data.
    
    Args:
        data (list[dict]): List of dictionaries representing rows in the CSV file.
    """
    print(f"Number of rows: {len(data)}")
    if data:
        print(f"First row: {data[0]}")  # Print the first row for preview

@flow
def csv_network_file_flow(network_path: str):
    """
    Prefect flow to fetch and process data from a CSV file on a network path.
    
    Args:
        network_path (str): Path to the network file.
    """
    data = fetch_csv_from_network_file(network_path)
    process_csv_data(data)

if __name__ == "__main__":
    # Replace this with your network file path
    network_file_path = r"\\network_drive\shared_folder\example_file.csv"
    csv_network_file_flow(network_file_path)
